{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,IAAI,SAAS,GAAG,OAAO,CAAC,WAAW,CAAC,CAAA;;AAEpC,EAAE,CAAC,KAAK,CAAC;AACL,eAAS,EAAE,CAAC,SAAS;;AAErB,cAAU,EAAE;;;;;;;;;;;KAWX;;AAED,UAAM,EAAE,kBAAY;AAChB,YAAI,CAAC,aAAa,GAAG,KAAK,CAAA;AAC1B,YAAI,CAAC,WAAW,GAAG,KAAK,CAAA;;AAExB,YAAI,CAAC,aAAa,EAAE,CAAA;;;AAGpB,YAAI,OAAO,GAAG,EAAE,CAAC,QAAQ,CAAC,mBAAmB,EAAE,CAAC;AAChD,eAAO,CAAC,OAAO,GAAG,IAAI,CAAC;;;;AAIvB,YAAI,CAAC,OAAO,EAAE,CAAA;KAEjB;;;AAGD,WAAO,EAAE,mBAAY;AACjB,YAAI,IAAI,GAAG,IAAI,CAAA;AACf,eAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;;AAEtB,iBAAS,CAAC,OAAO,CAAC,UAAU,EAAE,UAAU,IAAI,EAAE;AAC1C,mBAAO,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;;;AAG3B,gBAAI,IAAI,GAAG;AACP,iBAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;AACd,iBAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;aACjB,CAAA;AACD,cAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,CAAA;SAClD,CAAC,CAAA;KACL;;;AAKD,iBAAa,EAAE,yBAAW;AACtB,YAAI,EAAE,GAAG,GAAG,CAAA;;AAGZ,YAAI,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,UAAS,KAAK,EAAE;AACxD,cAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,KAAK,CAAC,CAAA;;;AAInD,gBAAI,IAAI,CAAC,WAAW,EAAE;AAClB,oBAAI,CAAC,aAAa,GAAG,IAAI,CAAA;;AAEzB,kBAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAA;aACvD;AACD,gBAAI,CAAC,WAAW,GAAG,IAAI,CAAA;AACvB,gBAAI,MAAM,GAAG,EAAE,CAAC,QAAQ,CACpB,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,EAChB,EAAE,CAAC,QAAQ,CAAC,YAAU;AAClB,oBAAI,CAAC,WAAW,GAAG,KAAK,CAAA;aAC3B,EAAE,IAAI,CAAC,CACX,CAAA;;;AAGD,kBAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA;AAClB,gBAAI,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAA;AAC9B,gBAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAA;SAC9B,EAAE,IAAI,CAAC,CAAA;AACR,YAAI,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,UAAS,KAAK,EAAE;;AAEvD,cAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,KAAK,CAAC,CAAA;SACtD,EAAE,IAAI,CAAC,CAAA;AACR,YAAI,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,UAAS,KAAK,EAAE;;AAEtD,cAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAA;SACxD,EAAE,IAAI,CAAC,CAAA;KAKX;;CAQJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "var IOGameNet = require('IOGameNet')\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,      // The default value will be used only when the component attaching\r\n        //                           to a node for the first time\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n    },\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        this.isDoubleClick = false\r\n        this.isHaveClick = false\r\n        //添加触摸\r\n        this.addTouchEvent()\r\n\r\n        //添加碰撞\r\n        var manager = cc.director.getCollisionManager();\r\n        manager.enabled = true;\r\n        // manager.enabledDebugDraw = true;\r\n        \r\n        //初始化网络\r\n        this.initNet()\r\n\r\n    },\r\n\r\n    //初始化网络\r\n    initNet: function () {\r\n        var self = this\r\n        console.log('初始化网络:');\r\n        //获取到链接网易云信的实例（NetEaseIM的缩写）\r\n        IOGameNet.connect('xuhuijie', function (data) {\r\n            console.log('登录成功：', data);\r\n\r\n            //发送登录成功的消息\r\n            var data = {\r\n                x: self.node.x,\r\n                y: self.node.y,\r\n            }\r\n            cc.director.GlobalEvent.emit('Net_login', data)\r\n        })\r\n    },\r\n\r\n    \r\n\r\n    //添加触摸监控\r\n    addTouchEvent: function() {\r\n        var dt = 0.3//双击的间隔时间\r\n\r\n\r\n        this.node.on(cc.Node.EventType.TOUCH_START, function(event) {\r\n            cc.director.GlobalEvent.emit('moveTo', event.touch)\r\n\r\n\r\n            //==============双击的判断===================\r\n            if (this.isHaveClick) {\r\n                this.isDoubleClick = true\r\n                //console.log('双击！');\r\n                cc.director.GlobalEvent.emit('isAddSpeedMove', true)\r\n            }\r\n            this.isHaveClick = true\r\n            var action = cc.sequence(\r\n                cc.delayTime(dt),\r\n                cc.callFunc(function(){\r\n                    this.isHaveClick = false\r\n                }, this),\r\n            )\r\n            //==========================================\r\n            \r\n            action.setTag(255)\r\n            this.node.stopActionByTag(255)\r\n            this.node.runAction(action)\r\n        }, this)\r\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, function(event) {\r\n            \r\n            cc.director.GlobalEvent.emit('moveTo', event.touch)\r\n        }, this)\r\n        this.node.on(cc.Node.EventType.TOUCH_END, function(event) {\r\n            //松开一定要恢复原速\r\n            cc.director.GlobalEvent.emit('isAddSpeedMove', false)\r\n        }, this)\r\n\r\n\r\n        \r\n\r\n    },\r\n\r\n    \r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n    // },\r\n});\r\n"
  ]
}