{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "var Helpers = require('Helpers')\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        ['速度(像素/秒)']: 50,\r\n        curExp: 0,\r\n        curLv: 0,\r\n        sectionPrefab:{\r\n            default: null,\r\n            type: cc.Prefab,\r\n        },\r\n        moveDirRot: 90,\r\n\r\n    },\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        this.index = 0\r\n        this.node.zIndex = 255\r\n        this.addTailDt = this['速度(像素/秒)'] * 0.0005\r\n        this.speed = this['速度(像素/秒)']\r\n        this.sectionPool = new cc.NodePool('sectionPool');\r\n        this.isStop = false\r\n\r\n\r\n        this.initIt()\r\n    },\r\n\r\n    //初始化蛇的样子\r\n    initIt: function () {\r\n        \r\n        var colorAry = Helpers.getRandomColor()\r\n        this.node.color = new cc.Color(colorAry[0], colorAry[1], colorAry[2])\r\n        \r\n        this.runAddTailAction()\r\n    },\r\n\r\n    //运行不停生成尾巴的动作\r\n    runAddTailAction: function () {\r\n        var dt = this.getAddTailDt()\r\n        var action = cc.repeatForever(cc.sequence(\r\n                cc.callFunc(function(){\r\n                    this.createSection()\r\n                }, this),\r\n                cc.delayTime(dt),\r\n        ))\r\n        action.setTag(125)\r\n        this.node.stopActionByTag(125)\r\n        this.node.runAction(action)\r\n    },\r\n\r\n    //获取尾巴生成公式\r\n    getAddTailDt: function () {\r\n        return 6 / this.speed\r\n    },\r\n\r\n    //创建蛇的段\r\n    createSection: function () {\r\n\r\n        var node\r\n        if (this.sectionPool.size() > 0) { // 通过 size 接口判断对象池中是否有空闲的对象\r\n            node = this.sectionPool.get();\r\n        } else { // 如果没有空闲对象，也就是对象池中备用对象不够时，我们就用 cc.instantiate 重新创建\r\n            node = cc.instantiate(this.sectionPrefab);\r\n        }\r\n        node.color = this.node.color\r\n        node.scale = this.node.scale\r\n        node.rotation = this.node.rotation\r\n        node.x = this.node.x\r\n        node.y = this.node.y\r\n        node.parent = this.node.parent\r\n\r\n        \r\n        var srcLen = 1\r\n        var dt = this.curLv * 0.2 + srcLen\r\n        var action = cc.sequence(\r\n                cc.delayTime(dt),\r\n                cc.scaleTo(dt / 2, this.node.scale - 1),\r\n                cc.callFunc(function(){\r\n                    this.sectionPool.put(node)\r\n                }, this),\r\n        )\r\n        node.runAction(action)\r\n    },\r\n\r\n\r\n\r\n\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    update: function (dt) {\r\n        if (this.isStop) {\r\n            return\r\n        }\r\n\r\n        this.node.x += this.moveDirVec.x * this.speed * dt\r\n        this.node.y += this.moveDirVec.y * this.speed * dt\r\n    },\r\n});\r\n"
  ]
}