{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "var Helpers = require('Helpers')\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        foodPic:{\r\n            default: null,\r\n            type: cc.SpriteFrame,\r\n        },\r\n        addFoodDt: 2,\r\n        foodPrefab: {\r\n            default: null,\r\n            type: cc.Prefab,\r\n        },\r\n        canvas: cc.Node,\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        this.foodPool = new cc.NodePool('foodPool');\r\n\r\n        this.addRandomFood()\r\n        this.addScaleControl()\r\n\r\n        \r\n\r\n        //监听来自食物发出的尖叫（食物通知地图让地图来用缓存池管理）\r\n        cc.director.GlobalEvent.on('eatAFood', function (data) {\r\n            var node = data\r\n            this.foodPool.put(node)\r\n        }, this)\r\n    },\r\n\r\n    //随机添加食物，不由服务器管，每一个在线的玩家都主动添加食物，这样在线玩家越多，食物也就会越多\r\n    addRandomFood: function () {\r\n        var action = cc.repeatForever(cc.sequence(\r\n                cc.delayTime(this.addFoodDt),\r\n                cc.callFunc(function(){\r\n                    this.addFood()\r\n                }, this),\r\n        ))\r\n        this.node.runAction(action)\r\n    },\r\n\r\n    //添加食物实现\r\n    addFood: function () {\r\n        var maxFoodCount = cc.sys.isMobile ? 100 : 200\r\n\r\n        if (this.node.children.length > maxFoodCount) {\r\n            // console.log('数量已经过多，不加食物');\r\n            return\r\n        }\r\n\r\n\r\n        var pad = 20\r\n        var minX = pad\r\n        var maxX = this.node.width - pad\r\n        var minY = pad\r\n        var maxY = this.node.height - pad\r\n\r\n        var x = Helpers.getRandom(minX, maxX)\r\n        var y = Helpers.getRandom(minY, maxY)\r\n\r\n\r\n        var node\r\n        if (this.foodPool.size() > 0) { // 通过 size 接口判断对象池中是否有空闲的对象\r\n            node = this.foodPool.get();\r\n        } else { // 如果没有空闲对象，也就是对象池中备用对象不够时，我们就用 cc.instantiate 重新创建\r\n            node = cc.instantiate(this.foodPrefab);\r\n        }\r\n        node.x = x\r\n        node.y = y\r\n        node.parent = this.node\r\n    },\r\n\r\n    //添加放大缩小操作\r\n    addScaleControl: function () {\r\n\r\n        if (cc.sys.isMobile) {\r\n            //添加多点触摸事件监听器\r\n            this.canvas.on(cc.Node.EventType.TOUCH_MOVE, function (event) {\r\n                //console.log('手机添加', event);\r\n                var touches = event.getTouches();\r\n                if (touches.length >= 2) {\r\n                    console.log('手机添加touches:', touches)\r\n                    var touch1 = touches[0], touch2 = touches[1];\r\n                    var delta1 = touch1.getDelta(), delta2 = touch2.getDelta();\r\n                    var touchPoint1 = this.node.convertToNodeSpaceAR(touch1.getLocation());\r\n                    var touchPoint2 = this.node.convertToNodeSpaceAR(touch2.getLocation());\r\n                    //缩放\r\n                    var distance = cc.pSub(touchPoint1, touchPoint2);\r\n                    var delta = cc.pSub(delta1, delta2);\r\n                    var scale = 1;\r\n                    if (Math.abs(distance.x) > Math.abs(distance.y)) {\r\n                        scale = (distance.x + delta.x) / distance.x * this.node.scale;\r\n                    }\r\n                    else {\r\n                        scale = (distance.y + delta.y) / distance.y * this.node.scale;\r\n                    }\r\n\r\n                    //范围限制\r\n                   var maxS = 1\r\n                   var minS = 1 / cc.director.Player.node.scale\r\n                   this.node.scale = cc.clampf(scale, minS, maxS)\r\n                }\r\n            }, this);\r\n        } else {\r\n            //添加鼠标滚轮的操作\r\n            var listener = {\r\n                event: cc.EventListener.MOUSE,\r\n                onMouseScroll: function (event) {\r\n                   // cc.log('Mouse Scroll this: ', event.currentTarget);\r\n                   if (event.getScrollY() > 0) {    \r\n                        event.currentTarget.scale += 0.01\r\n                   }\r\n                   else{\r\n                        event.currentTarget.scale -= 0.01\r\n                   }\r\n                   //范围限制\r\n                   var maxS = 1\r\n                   var minS = 1 / cc.director.Player.node.scale\r\n                   event.currentTarget.scale = cc.clampf(event.currentTarget.scale, minS, maxS)\r\n                },\r\n            }\r\n            cc.eventManager.addListener(listener, this.node);\r\n        }\r\n        \r\n\r\n    },\r\n\r\n\r\n    // update: function (dt) {\r\n    //     // console.log('大小:', this.node.x, this.node.y);\r\n    // },\r\n\r\n});\r\n"
  ]
}